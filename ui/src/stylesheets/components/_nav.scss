/*
----------------------------------------------------------------------------
Dependencies.
----------------------------------------------------------------------------
*/
@use '../base' as *;
@use '../mixins' as *;

.nav {
    $this: &;

    &__list {
        display: flex;
        flex-wrap: wrap;
        gap: $gutter-m;
    }

    &__link {
        @include focus;
        color: inherit;
        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }
    }

    [aria-current] {
        color: $brand;
        font-weight: bold;
    }

    // Hamburger navigation.
    &--hamburger {
        position: relative;

        &.is-js-enabled {
            #{$this}--hamburger__button {
                display: inline-flex;
            }

            #{$this}__list {
                background-color: $background-color;
                border: $border-width-s solid;
                inset-block-start: 100%;
                padding: $gutter-m;
                position: absolute;
                z-index: z('popup');
            }
        }

        #{$this}__list {
            flex-direction: column;
        }
    }

    #{$this}--hamburger__button {
        display: none;

        &[aria-expanded='false'] {
            .icon:last-of-type {
                display: none;
            }
        }

        &[aria-expanded='true'] {
            .icon:first-of-type {
                display: none;
            }
        }
    }

    // Disclosure navigation (with dropdowns).
    &--disclosure {
        > .nav__list {
            align-items: center;
        }

        .icon {
            transition: transform $animation-fast;
        }
    }

    #{$this}__list--dropdown {
        background-color: $background-color;
        border: $border-width-s solid;
        flex-direction: column;
        inset-block-start: 100%;
        padding: $gutter-m;
        position: absolute;
        z-index: z('popup');
    }

    #{$this}-item--has-dropdown {
        align-items: center;
        display: flex;
        gap: $gutter-s;
        position: relative;

        [aria-expanded='true'] {
            .icon {
                transform: rotate(180deg);
            }
        }
    }
}
