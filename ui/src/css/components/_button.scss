/*
----------------------------------------------------------------------------
Dependencies.
----------------------------------------------------------------------------
*/
@use '../base' as *;

.button {
    background: transparent;
    color: inherit;
    cursor: pointer;
    display: inline-block;
    padding: var(--gutter-s);
    text-decoration: none;

    &:hover {
        opacity: var(--hover-opacity);
    }

    &:active {
        transform: var(--active-transform);
    }

    &:disabled {
        cursor: not-allowed;
        opacity: 0.6;
    }

    &[class*='text'] {
        border: var(--border-width-s) solid;
    }

    &--text-icon {
        align-items: center;
        display: inline-flex;
        gap: var(--gutter-s);
        justify-content: space-between;

        span {
            text-align: start;
        }
    }

    &--reverse {
        flex-direction: row-reverse;
    }

    // Apply colours to button variants.
    &--primary {
        background-color: $color-brand;
        color: $color-neutral-100;

        &[class*='text'] {
            border-color: $color-brand;
        }
    }

    &--secondary {
        color: $color-brand;

        &[class*='text'] {
            border-color: $color-brand;
        }

        /* stylelint-disable-next-line order/order */
        @media (prefers-color-scheme: dark) {
            color: inherit;
        }
    }

    &--positive {
        background-color: $color-success;

        &[class*='text'] {
            border-color: $color-success;
        }

        /* stylelint-disable-next-line order/order */
        @media (prefers-color-scheme: dark) {
            color: $color-neutral-900;
        }
    }

    &--negative {
        background-color: $color-error;
        color: $color-neutral-100;

        &[class*='text'] {
            border-color: $color-error;
        }
    }

    &--icon {
        align-items: center;
        display: inline-flex;
        justify-content: center;
    }

    // Text (and text + icons) buttons only. Icon button sizes are determined by the context of their parent container font-size (or their icon size overrides).
    &--small {
        font-size: var(--font-size-s);
        padding: var(--gutter-xs);
    }
}
