/*
----------------------------------------------------------------------------
Dependencies.
----------------------------------------------------------------------------
*/
@use '../mixins' as *;
@use '../base' as *;

@mixin validation {
    :is(.label, .checkbox__label, .radio__label) {
        padding-inline-end: var(--gutter-m);
        position: relative;

        &::after {
            color: $color-error;
            content: '!';
            display: block;
            font-size: 1em;
            font-weight: bold;
            inset-block-start: 0;
            inset-inline-end: 0;
            position: absolute;
        }
    }
}

.form {
    display: flex;
    flex-direction: column;
    gap: var(--gutter-m);

    &__field {
        display: flex;
        flex-direction: column;
        gap: var(--gutter-xs);

        // Native HTML5 validation.
        &:has(:valid:required) {
            @include validation;

            :is(.label, .checkbox__label, .radio__label) {
                /* stylelint-disable-next-line max-nesting-depth */
                &::after {
                    color: $color-success;
                    content: 'âœ“';
                }
            }
        }

        &:has(:user-invalid:required) {
            @include validation;
        }
    }

    // Errors rendered directly in HTML, or via JavaScript.
    &__error {
        color: $color-error;
    }

    &__field--has-error {
        @include validation;

        &:has(:valid) {
            .form__error {
                display: none;
            }
        }
    }
}

:is(.input, .select, .textarea) {
    @include focus($background: true);
    border: var(--border-width-s) solid;
    padding: var(--gutter-s);

    // Native HTML5 validation.
    &:valid:required {
        background-color: hsl(var(--color-accent-positive) / 10%);
        border-color: $color-success;
        border-width: var(--border-width-m);
    }

    &:user-invalid:required {
        background-color: hsl(var(--color-accent-negative) / 10%);
        border-color: $color-error;
        border-width: var(--border-width-m);
    }

    // ARIA.
    &[aria-invalid='true'] {
        background-color: hsl(var(--color-accent-negative) / 10%);
        border-color: $color-error;
        border-width: var(--border-width-m);
    }
}

.message--error {
    + .form {
        margin-block-start: var(--gutter-m);
    }
}
